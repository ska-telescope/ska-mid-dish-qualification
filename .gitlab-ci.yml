image: $SKA_K8S_TOOLS_BUILD_DEPLOY

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - lint
  - build
  - test
  - scan
  - publish
  - pages

include:
  # Python packages build,lint, test and publish
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/python.gitlab-ci.yml"

  # Jupyter Notebooks
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/notebook.gitlab-ci.yml"

  # Docs pages
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/docs.gitlab-ci.yml"

  # Build and publish changelog
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/release.gitlab-ci.yml"

  # Create Gitlab CI badges from CI metrics
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/finaliser.gitlab-ci.yml"

notebook-lint:
  when: manual

notebook-test:
  when: manual

python-test:
  image: registry.gitlab.com/ska-telescope/ska-mid-disq/ci-tests:latest
  services:
    - name: registry.gitlab.com/ska-telescope/ska-te-dish-structure-simulator/ska-te-ds-web-sim:0.11.0
      alias: cetc-simulator
  script:
    - make python-test PYTHON_VARS_BEFORE_PYTEST=xvfb-run PYTHON_VARS_AFTER_PYTEST=--with-cetc-sim PYTHON_TEST_FILE=tests/test_disq_mvc.py

python-publish-to-gitlab:
  rules: # Only automatically publish package to Gitlab registry for main branch and tags
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_COMMIT_TAG
      when: always
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual # Allow manual run on merge requests
      allow_failure: true
    - when: manual # Allow manual run on any other branch
      allow_failure: true
