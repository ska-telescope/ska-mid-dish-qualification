image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PACKAGE_REGISTRY_PYPI_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi"
  PACKAGE_REGISTRY_GENERIC_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic"

# https://pip.pypa.io/en/stable/topics/caching/
cache:
  paths:
    - .cache/pip

stages:
  # - lint
  - build
  - test
  # - scan
  - upload # publish
  - release # publish
  # - pages

include:
  # Python packages build,lint, test and publish
  # - project: 'ska-telescope/templates-repository'
  #   file: 'gitlab-ci/includes/python.gitlab-ci.yml'

  # Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'

  # Create Gitlab CI badges from CI metrics
  # - project: 'ska-telescope/templates-repository'
  #   file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

build-job:
  image: python:3.11
  stage: build
  before_script:
    - python --version ; pip --version # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
  script:
    - pip install build
    - python -m build --wheel
    - echo "WHEELFILE=`ls dist`" > wheel.env
  artifacts:
    paths:
      - dist/DiSQ*.whl
    reports:
      dotenv: wheel.env

test-install-job:
  image: python:3.11
  stage: test
  before_script:
    - python --version ; pip --version # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
  script:
    - pip install -e .[dev]

upload-pypi-job:
  image: python:3.11
  stage: upload
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: build-job
      artifacts: true
  before_script:
    - python --version ; pip --version # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install twine
  script:
    - |
      echo "Package registry url: ${PACKAGE_REGISTRY_PYPI_URL}"
      TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${PACKAGE_REGISTRY_PYPI_URL} dist/*

upload-generic-job:
  image: python:3.11
  stage: upload
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - job: build-job
      artifacts: true
  cache: []
  before_script:
    - echo "WHEELFILE=${WHEELFILE}" >> wheel.env
  script:
    - |
      echo "Package registry url: ${PACKAGE_REGISTRY_GENERIC_URL}"
      echo "wheelfile: ${WHEELFILE}"
      ls dist/
      curl -s --fail-with-body --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file dist/${WHEELFILE} ${PACKAGE_REGISTRY_GENERIC_URL}/DiSQ/${CI_COMMIT_TAG}/${WHEELFILE}
  artifacts:
    reports:
      dotenv: wheel.env

release-job:
  image: python:3.11
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG # Run this job when a tag is created
  needs:
    - job: upload-generic-job
      artifacts: true
  cache: []
  script:
    - echo "running release_job"
  release: # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    tag_name: "${CI_COMMIT_TAG}"
    description: "DiSQ release ${CI_COMMIT_TAG}"
    ref: "${CI_COMMIT_SHA}"
    assets:
      links:
        - name: "${WHEELFILE}"
          url: "${PACKAGE_REGISTRY_GENERIC_URL}/DiSQ/${CI_COMMIT_TAG}/${WHEELFILE}"
          link_type: "package" # optional
